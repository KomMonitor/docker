version: '2'

networks:
  kommonitor:
    driver: bridge
    
services:
    kommonitor-client:
      image: 'kommonitor/web-client'
      restart: unless-stopped
      volumes:
       - ./client/config-storage-server.json:/usr/share/nginx/html/config/config-storage-server.json    # mount config for client-config-service 
      ports:
        - 8084:80
      networks:
       - kommonitor

    kommonitor-client-config:
      image: 'kommonitor/client-config'
      restart: unless-stopped
      ports:
        - 8088:8088
      networks:
       - kommonitor
      volumes:
       - ./client_config/webClientAppConfig.js:/code/configStorage/webClientAppConfig.js  # mounting existing webClientAppConfig into container to have console access
       - ./client_config/webClientKeycloakConfig.json:/code/configStorage/webClientKeycloakConfig.json  # mounting existing webClientKeycloakConfig into container to have console access
       - ./client_config/webClientControlsConfig.json:/code/configStorage/webClientControlsConfig.json  # mounting existing webClientControlsConfig into container to have console access  
      environment:
       - PORT=8088  # port
       - KEYCLOAK_ENABLED=true # enable/disable keycloak
       - KEYCLOAK_REALM=kommonitor # keycloak realm name
       - KEYCLOAK_AUTH_SERVER_URL=http://localhost:8080/auth/ # keycloak target URL inlcuding /auth/
       - KEYCLOAK_RESOURCE=kommonitor-client-config # keycloak client name
       - KEYCLOAK_CLIENT_SECRET=keycloak-secret # keycloak client secret using access type confidential
       - KOMMONITOR_ADMIN_ROLENAME=kommonitor-creator # name of kommonitor admin role within keycloak - default is 'kommonitor-creator' 

    redis:
      image: redis:alpine
      restart: unless-stopped
      networks:
      - kommonitor

    kommonitor-processing-engine:
      image: 'kommonitor/processing-engine'
      restart: unless-stopped
      ports:
       - "8086:8086"
      networks:
       - kommonitor
      volumes:
       - ./processing_engine:/code/tmp
      depends_on:
       - redis
      environment:
       - REDIS_HOST=redis    # use docker name if possible; else IP 
       - REDIS_PORT=6379     # running redis port
       - KOMMONITOR_DATA_MANAGEMENT_URL=http://kommonitor-data-management:8085/management    # URL to Data Management service; use docker name and port if possible
       - GEOMETRY_SIMPLIFICATION_PARAMETER_NAME=simplifyGeometries   # paramter to query geometries from Data Management component 
       - GEOMETRY_SIMPLIFICATION_PARAMETER_VALUE=original            # values are ["original", "weak", "medium", "strong"] from weak to strong the geometries are more simplified (reducing size)
       - FEATURE_ID_PROPERTY_NAME=ID       # KomMonitor wide setting, which property contains feature ID values - best not be changed
       - FEATURE_NAME_PROPERTY_NAME=NAME   # KomMonitor wide setting, which property contains feature NAME values - best not be changed
       - OPEN_ROUTE_SERVICE_URL=https://ors5.fbg-hsbo.de    # URL to Open Route Service instance (not limited to ORS version 5)
       - DISABLE_LOGS=false          # optionally diable any console log
       - MAX_NUMBER_OF_TARGET_DATES_PER_PUT_REQUEST=45   # setting to split up computed indicator results import/update requests; each request has the specified maximum number of indicator timestamps 
       - ENCRYPTION_ENABLED=false       # enable/disable encrypted data retrieval from Data Management service
       - ENCRYPTION_PASSWORD=password   # shared secret for data encryption - must be set equally within all supporting components
       - ENCRYPTION_IV_LENGTH_BYTE=16   # length of random initialization vector for encryption algorithm - must be set equally within all supporting components
       - KEYCLOAK_ENABLED=true                                       # enable/disable role-based data access using Keycloak
       - KEYCLOAK_REALM=kommonitor                                    # Keycloak realm name
       - KEYCLOAK_AUTH_SERVER_URL=http://localhost:8080/auth/         # Keycloak URL ending with "/auth/"
       - KEYCLOAK_RESOURCE=kommonitor-processing-engine               # Keycloak client/resource name
       - KEYCLOAK_CLIENT_SECRET=keycloak-secret                       # keycloak client secret using access type confidential
       - KOMMONITOR_ADMIN_ROLENAME=kommonitor-creator                 # name of kommonitor admin role within keycloak - default is 'kommonitor-creator'
       - KEYCLOAK_ADMIN_RIGHTS_USER_NAME=processor                    # Keycloak internal user name within kommonitor-realm that has administrator role associated in order to grant rigths to fetch all data 
       - KEYCLOAK_ADMIN_RIGHTS_USER_PASSWORD=processor                # Keycloak internal user password within kommonitor-realm that has administrator role associated in order to grant rigths to fetch all data

    kommonitor-processing-scheduler:
      image: 'kommonitor/processing-scheduler'
      restart: unless-stopped
      networks:
       - kommonitor
      depends_on:
       - kommonitor-processing-engine
       - kommonitor-data-management
      environment:
       - KOMMONITOR_DATA_MANAGEMENT_URL=http://kommonitor-data-management:8085/management      # URL to Data Management service; use docker name and port within same network if possible
       - KOMMONITOR_PROCESSING_ENGINE_URL=http://kommonitor-processing-engine:8086/processing  # URL to Processing Engine service; use docker name and port within same network if possible
       - CRON_PATTERN_FOR_SCHEDULING=*/30 * * * *     # CRON pattern (refer to https://www.npmjs.com/package/node-cron) for periodic scheduler triggering to initialize missing indicator time-series elements  
       - SETTING_AGGREGATE_SPATIAL_UNITS=false    # default false; global setting whether the computed indictor values from the hierarchically lowest spatial unit shall be aggregated to hierarchically higher spatial units (true) or if each spatial unit shall be computed own their own (false - required that base data is available on the resprctive spatial units)
       - TRIGGER_COMPUTATION_OF_PAST_TIMESTAMPS_OVERWRITING_EXISTING_VALUES=false   # boolean global setting to let scheduler retrigger already computed indicator time-series elements for a certain period in time; good for use cases where historic base data is changed due to new facts, and indicator data - computed from that base data - must be recomputed; applies globally to all computed indicators currently  
       - NUMBER_OF_DAYS_FOR_OVERWRITING_EXISTING_VALUES=7   # number of days within the past to recompute indicator time series values - only relevant if TRIGGER_COMPUTATION_OF_PAST_TIMESTAMPS_OVERWRITING_EXISTING_VALUES=true
       - DISABLE_LOGS=false         # optionally disable any console logs
       - USE_LATEST_POSSIBLE_BASE_INDICATOR_DATE_INSTEAD_OF_COMMON_DATE=true   # # if set to true, then the last possible timestamp from any baseIndicator is used; i.e. if there are two base indicators A and B where lastTimestamp(A)=2019-12-31 and lastTimestamp(B)=2020-06-31, then 2020-06-31 is used; if set to false, then 2019-12-31 will be used instead (as this is the latest "common" date across all baseIndicators) 
       - ENCRYPTION_ENABLED=false       # enable/disable encrypted data retrieval from Data Management service
       - ENCRYPTION_PASSWORD=password   # shared secret for data encryption - must be set equally within all supporting components
       - ENCRYPTION_IV_LENGTH_BYTE=16   # length of random initialization vector for encryption algorithm - must be set equally within all supporting components
       - KEYCLOAK_ENABLED=true                                       # enable/disable role-based data access using Keycloak
       - KEYCLOAK_REALM=kommonitor                                    # Keycloak realm name
       - KEYCLOAK_AUTH_SERVER_URL=http://localhost:8080/auth/         # Keycloak URL ending with "/auth/"
       - KEYCLOAK_RESOURCE=kommonitor-processing-scheduler               # Keycloak client/resource name
       - KEYCLOAK_CLIENT_SECRET=keycloak-secret                       # keycloak client secret using access type confidential
       - KOMMONITOR_ADMIN_ROLENAME=kommonitor-creator                 # name of kommonitor admin role within keycloak - default is 'kommonitor-creator'
       - KEYCLOAK_ADMIN_RIGHTS_USER_NAME=scheduler                    # Keycloak internal user name within kommonitor-realm that has administrator role associated in order to grant rigths to fetch all data 
       - KEYCLOAK_ADMIN_RIGHTS_USER_PASSWORD=scheduler                # Keycloak internal user password within kommonitor-realm that has administrator role associated in order to grant rigths to fetch all data 

    kommonitor-importer:
      image: 'kommonitor/importer'
      restart: unless-stopped
      ports:
        - 8087:8087
      volumes:
       - ./importer:/tmp/importer   
      environment:
       - SERVER_PORT=8087       # server port
       - kommonitor.importer.datamanagement-api-url=http://kommonitor-data-management:8085/management   # connection entry point for internal communication with data management component
       - kommonitor.importer.geocoder-api-url=https://geocoder.fbg-hsbo.de/geocoder     # connection entry point for internal communication with geocoder component (you may use the instance deployed at HSBO as it is configured here)
       - JAVA_OPTS=-Dorg.geotools.referencing.forceXY=true    # setting to control coordinate axis order of coordinate systems. should be set to 'true', to have X-coordinate as right value and Y-cooridnate as up value
       - KOMMONITOR_SWAGGERUI_BASEPATH=/importer              # depending on DNS Routing and Reverse Proxy setup a base path can be set here to access swagger-ui interface (e.g. set '/importer' if https://kommonitor-url.de/importer works as entry point for localhost:8087)
       - KOMMONITOR_SWAGGER_UI_SECURITY_CLIENT_ID=kommonitor-importer    # client/resource id of data management component in Keycloak realm
       - KOMMONITOR_SWAGGER_UI_SECURITY_SECRET=secret                    # WARNING: DO NOT SET IN PRODUCTION!!! Keycloak secret of this component within Credentials tab of respective Keycloak client; secret for swagger-ui to authorize swagger-ui requests in a Keycloak-active scenario (mostly this should not be set, as users with access to swagger-ui (e.g. 'http://localhost:8085/swagger-ui.html') could then authorize without own user account and perform CRUD requests)
       - KEYCLOAK_ENABLED=true                                                # enable/disable role-based data access using Keycloak (true requires working Keycloak Setup and enforces that all other components must be configured to enable Keycloak as well)
       - KEYCLOAK_AUTH_SERVER_URL=http://localhost:8080/auth/                 # Keycloak URL ending with '/auth/'
       - KEYCLOAK_REALM=kommonitor                                            # Keycloak realm name
       - KEYCLOAK_RESOURCE=kommonitor-importer                                # client/resource id of data management component in Keycloak realm
       - KEYCLOAK_CREDENTIALS_SECRET=secret                                   # Keycloak secret of this component within Credentials tab of respective Keycloak client; must be set here
      networks:
       - kommonitor

    kommonitor-db:
      image: mdillon/postgis
      restart: unless-stopped
      ports:
        - 5432:5432
      environment:
        - POSTGRES_USER=kommonitor
        - POSTGRES_PASSWORD=kommonitor
        - POSTGRES_DB=kommonitor_data
      volumes:
        - ./database:/var/lib/postgresql/data
      networks:
        - kommonitor
        
    # optional pgadmin container to inspect the database
    pgadmin:
      image: dpage/pgadmin4
      restart: unless-stopped
      ports:
        - 8083:80
      environment:
        - PGADMIN_DEFAULT_EMAIL=user@kommonitor.de
        - PGADMIN_DEFAULT_PASSWORD=kommonitor
     # volumes:
     #   - /var/kommonitor/pgadmin/servers.json:/pgadmin4/servers.json
     #   - /var/kommonitor/pgadmin/pgadmin:/var/lib/pgadmin
      networks:
        - kommonitor

    kommonitor-data-management:
      image: kommonitor/data-management
      restart: unless-stopped
      depends_on:
        - kommonitor-db
#     	 geoserver:
 #       condition: service_healthy
      ports:
        - "8085:8085"
      networks:
        - kommonitor
      links:
        - kommonitor-db
      environment:
       - SERVER_PORT=8085                 # Server port; default is 8085
       - DATABASE_HOST=kommonitor-db      # host of database (i.e. docker name when db runs in docker in same network; else URL to database server)
       - DATABASE_USER=kommonitor         # database user (username with acess to database, should be owner of the database)
       - DATABASE_PASSWORD=kommonitor     # database user password
       - DATABASE_NAME=kommonitor_data    # database name
       - DATABASE_PORT=5432               # database port
       - logging.level.de.hsbo.kommonitor=INFO    # adjust logging level [e.g. "INFO", "WARN", "ERROR"] - ERROR logs only errors 
       - ENABLE_OGC_PUBLISHMENT=false                               # enable/disable Geoserver-based publishment of spatial data as Web service - currently Geoserver-connection should be disabled
       - DB_SCHEMA_SPATIALUNITS=public                              # only relevant with GeoServer connection
       - DB_SCHEMA_GEORESOURCES=public                              # only relevant with GeoServer connection
       - DB_SCHEMA_INDICATORS=public                                # only relevant with GeoServer connection
       - GEOSERVER_HOST=http://localhost:8090/geoserver    # Geoserver host URL - only relevant with GeoServer connection
       - GEOSERVER_PORT=80                                          # Geoserver port - only relevant with GeoServer connection
       - GEOSERVER_USER=admin                                       # Geoserver username - only relevant with GeoServer connection
       - GEOSERVER_PASSWORD=sK4nc$bDSm                              # Geoserver user password - only relevant with GeoServer connection
       - GEOSERVER_TARGET_WORKSPACE=kommonitor                      # Geoserver workspace name (will be created if not exists) - only relevant with GeoServer connection
       - GEOSERVER_DATASTORE_SPATIALUNITS=kommonitor_spatialunits   # Geoserver datastore name for spatial units (will be created if not exists) - only relevant with GeoServer connection
       - GEOSERVER_DATASTORE_GEORESOURCES=kommonitor_georesources   # Geoserver datastore name for georesources (will be created if not exists) - only relevant with GeoServer connection
       - GEOSERVER_DATASTORE_INDICATORS=kommonitor_indicators       # Geoserver datastore name for indicators (will be created if not exists) - only relevant with GeoServer connection
       - GEOSERVER_DEFAULT_EPSG=EPSG:4326                           # Geoserver default EPSG code (EPSG:4326 as KomMonitor uses this internally as well) - only relevant with GeoServer connection
       - encryption.enabled=false                      # enable/disable encrypted data transfer from Data Management service (requested data will be encrypted)
       - encryption.symmetric.aes.password=password    # shared secret for data encryption - must be set equally within all supporting components
       - encryption.symmetric.aes.iv.length_byte=16    # length of random initialization vector for encryption algorithm - must be set equally within all supporting components
       - KOMMONITOR_DATAMANAGEMENTAPI_SWAGGERUI_BASEPATH=      # depending on DNS Routing and Reverse Proxy setup a base path can be set here to access swagger-ui interface (e.g. set '/data-management' if https://kommonitor-url.de/data-management works as entry point for localhost:8085)   
       - keycloak.enabled=true                                               # enable/disable role-based data access using Keycloak (true requires working Keycloak Setup and enforces that all other components must be configured to enable Keycloak as well)
       - kommonitor.swagger-ui.security.client-id=kommonitor-data-management  # client/resource id of data management component in Keycloak realm
       - kommonitor.swagger-ui.security.secret=secret                         # WARNING: DO NOT SET IN PRODUCTION!!! Keycloak secret of this component within Credentials tab of respective Keycloak client; secret for swagger-ui to authorize swagger-ui requests in a Keycloak-active scenario (mostly this should not be set, as users with access to swagger-ui (e.g. 'http://localhost:8085/swagger-ui.html') could then authorize without own user account and perform CRUD requests)
       - keycloak.realm=kommonitor                                            # Keycloak realm name
       - keycloak.auth-server-url=http://localhost:8080/auth/                 # Keycloak URL ending with '/auth/'
       - keycloak.resource=kommonitor-data-management                         # client/resource id of data management component in Keycloak realm
       - keycloak.bearer-only=true                                            # sets authentication workflow to use/accept Bearer token sent within Authorization header
       - keycloak.autodetect-bearer-only=false                                # normally do not change this value        
       - keycloak.sslquired=external                                          # Keycloak SSL setting; ["external", "none"]; default "external"
       - keycloak.public-client=false                                         # Keycloak setting that component is not public (its REST endpoints are partially Keycloak-protected and require Authentication)
       - keycloak.cors=true                                                   # enable CORS
       - keycloak.cors-allowed-methods=*                                      # enable all HTTP operations for CORS
       - keycloak.credentials.secret=secret                                   # Keycloak secret of this component within Credentials tab of respective Keycloak client; must be set here  
       - SERVER_MAXHTTPHEADERSIZE=48000                                       
       - server.max-http-header-size=48000
       - kommonitor.roles.admin=kommonitor-creator                                 # name of the Keycloak role that is used as "administrator" role within KomMonitor granting rights to inspect all data and perform all actions. This name of this role is configurable, but must be set to the equal value within management and importer component as well as within Keycloak 
       - kommonitor.recreateAllViewsOnStartup=false         # if true, will run a recreation of all database indicator views on startup (default false)

    kommonitor-harvester:
      image: kommonitor/harvester
      restart: unless-stopped
      ports:
        - "8089:8089"
      networks:
        - kommonitor
      environment:
       - PORT=8089  # server port
       - FEATURE_ID_PROPERTY_NAME=ID
       - FEATURE_NAME_PROPERTY_NAME=NAME
       - INDICATOR_DATE_PREFIX = "DATE_"
       - ENCRYPTION_COMPLETE_ENABLED=false
       - ENCRYPTION_PASSWORD=password
       - ENCRYPTION_IV_LENGTH_BYTE=16
       - GEOMETRY_SIMPLIFICATION_PARAMETER_NAME=simplifyGeometries
       - GEOMETRY_SIMPLIFICATION_PARAMETER_VALUE=original 