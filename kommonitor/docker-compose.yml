version: '3.8'

networks:
  kommonitor:
    name: kommonitor
    driver: bridge

services:
  kommonitor-proxy:
    image: nginx:latest
    container_name: kommonitor-proxy
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./proxy:/etc/nginx/templates
    environment:
      - NGINX_PORT=80
      - KEYCLOAK=keycloak:8080
      - CLIENT=kommonitor-client:80
      - CLIENT_CONFIG=kommonitor-client-config:8088
      - PROCESSING_ENGINE=kommonitor-processing-engine:8086
      - IMPORTER=kommonitor-importer:8087
      - DATA_MANAGEMENT=kommonitor-data-management:8085
    networks:
      - kommonitor

  kommonitor-client:
    image: 'kommonitor/web-client:2.1.3'
    container_name: kommonitor-client
    restart: unless-stopped
    volumes:
      - ./client/config-storage-server.json:/usr/share/nginx/html/config/config-storage-server.json # mount config for client-config-service
    networks:
      - kommonitor

  kommonitor-client-config:
    image: 'kommonitor/client-config:2.0.2'
    container_name: kommonitor-client-config
    restart: unless-stopped
    networks:
      - kommonitor
    volumes:
      - ./client_config/webClientAppConfig.js:/code/configStorage/webClientAppConfig.js # mounting existing webClientAppConfig into container to have console access
      - ./client_config/webClientKeycloakConfig.json:/code/configStorage/webClientKeycloakConfig.json # mounting existing webClientKeycloakConfig into container to have console access
      - ./client_config/webClientControlsConfig.json:/code/configStorage/webClientControlsConfig.json # mounting existing webClientControlsConfig into container to have console access
    env_file:
      - client-config.env
      - keycloak.env

  redis:
    image: redis:alpine
    container_name: kommonitor-redis
    restart: unless-stopped
    networks:
      - kommonitor

  kommonitor-processing-engine:
    image: 'kommonitor/processing-engine:2.0.0'
    container_name: kommonitor-processing-engine
    restart: unless-stopped
    networks:
      - kommonitor
    volumes:
      - ./processing_engine:/code/tmp
    depends_on:
      - redis
    env_file:
      - processing-engine.env

  kommonitor-processing-scheduler:
    image: 'kommonitor/processing-scheduler:2.0.0'
    container_name: kommonitor-processing-scheduler
    restart: unless-stopped
    networks:
      - kommonitor
    depends_on:
      - kommonitor-processing-engine
      - kommonitor-data-management
    env_file:
      - processing-scheduler.env

  kommonitor-importer:
    image: 'kommonitor/importer:2.0.2'
    container_name: kommonitor-importer
    restart: unless-stopped
    networks:
      - kommonitor
    volumes:
      - ./importer:/tmp/importer
    env_file:
      - importer.env
      - keycloak.env

  kommonitor-db:
    image: postgis/postgis:latest
    container_name: kommonitor-db
    restart: unless-stopped
    networks:
      - kommonitor
    #ports:
    #  - 5432:5432
    env_file:
      - db.env

  kommonitor-data-management:
    image: kommonitor/data-management:2.1.2
    container_name: kommonitor-data-management
    restart: unless-stopped
    depends_on:
      - kommonitor-db
    networks:
      - kommonitor
    links:
      - kommonitor-db
    env_file:
      - data-management.env
      - keycloak.env

# optional pgadmin container to inspect the database
#  pgadmin:
#    image: dpage/pgadmin4
#    container_name: pgadmin
#    restart: unless-stopped
#    ports:
#      - 8083:80
#    environment:
#      - PGADMIN_DEFAULT_EMAIL=user@kommonitor.de
#      - PGADMIN_DEFAULT_PASSWORD=kommonitor
#    # volumes:
#    #   - /var/kommonitor/pgadmin/servers.json:/pgadmin4/servers.json
#    #   - /var/kommonitor/pgadmin/pgadmin:/var/lib/pgadmin
#    networks:
#      - kommonitor
