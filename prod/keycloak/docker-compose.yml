version: '3'
      
networks:
  kommonitor:
    name: kommonitor
    driver: bridge

services:
  keycloak-db:
    image: postgres:15
    container_name: keycloak-db
    restart: unless-stopped
    networks:
      - kommonitor
    volumes:
      - ./database/data_v5:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d keycloak-data -U keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: keycloak-data
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
  keycloak:
    image: kommonitor/keycloak:latest-postgres
    container_name: keycloak
    restart: unless-stopped
    volumes:
      - ./realms/realm-export-kommonitor.json:/opt/keycloak/data/import/realm.json
      - ../certs:/opt/keycloak/demo/certs
    command:
      - --import-realm
    ports:
      - 8443:8443
    networks:
      - kommonitor
    depends_on:
      keycloak-db:
        condition: service_healthy
    environment:
      # KOMMONITOR_REALMS can be a comma sperated list of multiple realms.
      # KomMonitor realms will have a dedicated role policy evaluation strategy.
      - KOMMONITOR_REALMS=kommonitor 
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB_URL_HOST=keycloak-db
      - KC_DB_URL_PORT=5432
      - KC_DB_URL_DATABASE=keycloak-data
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=keycloak
      - KC_DB_SCHEMA=public
      - KC_HOSTNAME=keycloak
      - KC_SPI_CONNECTIONS_JPA_LEGACY_MIGRATION_STRATEGY=update
      - KC_HTTPS_CERTIFICATE_FILE=/opt/keycloak/demo/certs/cert.pem
      - KC_HTTPS_CERTIFICATE_KEY_FILE=/opt/keycloak/demo/certs/key.pem
      # - KC_HOSTNAME_ADMIN=keycloak
      # - KC_HTTP_ENABLED=true
      # - KC_HOSTNAME_STRICT=true
      # - KC_HOSTNAME_STRICT_HTTPS=true
      # - KC_HTTPS_CERTIFICATE_FILE=/opt/keycloak/demo/certs/keycloakcert.pem
      # - KC_HTTPS_CERTIFICATE_KEY_FILE=/opt/keycloak/demo/certs/keycloakkey.pem